{"version":3,"sources":["constants/routes.js","component/NavBar/NavBar.js","component/Login/Login.js","component/WatchList/WatchList.js","component/ShowUser/ShowUser.js","component/TourneyContainer/Tournaments.js","component/AllTeams/AllTeam.js","component/CreateUser/CreateUser.js","component/TeamList/TeamList.js","component/TeamShow/TeamShow.js","component/MatchShow/MatchShow.js","component/Schedule/Schedule.js","component/TournamentsShow/TournamentsShow.js","App.js","serviceWorker.js","index.js"],"names":["LOGIN","Nav","styled","NavLink","_templateObject","Title","h1","_templateObject2","NavBar","_ref","currentUser","doLogout","react_default","a","createElement","className","exact","to","activeClassName","concat","_id","username","onClick","key","Login","state","password","logged","message","handleChange","e","_this","setState","Object","defineProperty","target","name","value","handleSubmit","_callee","login","parsedResponse","regenerator_default","wrap","_context","prev","next","preventDefault","fetch","method","credentials","body","JSON","stringify","headers","Content-Type","sent","json","success","props","setCurrentUser","user","t0","console","log","stop","_this2","this","_this$state","react_router","onSubmit","htmlFor","text","onChange","type","Component","WatchList","watchList","map","team","i","react_router_dom","id","title","src","image","width","height","alt","deleteToWatchList","ShowUser","doGetUser","parsedUser","match","params","abrupt","_callee2","deleteWatchList","deletedWatchList","_context2","foundUser","then","_ref3","_this$state$user","length","component_WatchList_WatchList","withRouter","Linked","Link","Tournaments_templateObject","ListTournaments","tourney","league","toUpperCase","image_url","ListTeams","teams","ListOpponents","dateBegin","begin_at","timeBegin","opponents","opponent","results","score","str","Date","toDateString","moment","toTimeString","split","format","Tournaments","runningList","upcomingTeamsList","pastList","teamsList","pastMatchesList","_props$data","data","dataRunning","dataPast","dataUpcoming","dataPastMatches","Tournaments_ListTournaments","Tournaments_ListOpponents","Tournaments_ListTeams","AllTeam","teamList","dataUpcomingTourney","CreateUser","createUser","newUser","CreateUser_RegisterForm","RegisterForm","_ref2","TeamList","_props$data$fullTeam","fullTeam","players","player","role","TeamShow","teamId","window","location","pathname","addMessage","getTeam","ids","teamShow","teamShowJson","addTeamToWatch","addTeam","updatedUser","allData","_this3","component_TeamList_TeamList","Match","matchId","getMatch","Schedule","getUpcoming","upcomingMatch","upcomingMatchJson","schedules","TournamentsShow_templateObject","TourneyShow","stats","tournamentData","tourneyId","getTournament","schedule","scheduleJson","tournamentStats","tournament","rank","TournamentsShow_Linked","wins","losses","require","config","App","upcoming","history","push","routes","getTournaments","tournaments","tournamentsJson","component_NavBar_NavBar","path","render","TourneyContainer_Tournaments","AllTeams_AllTeam","component_TeamShow_TeamShow","TournamentsShow","dataTourney","MatchShow","component_CreateUser_CreateUser","component_Schedule_Schedule","component_ShowUser_ShowUser","component_Login_Login","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd62f1cf.chunk.js","sourcesContent":["export const ROOT = \"/\"\nexport const TEAMS = \"/teams\"\n\nexport const SCHEDULE = \"/schedule\"\nexport const USERS = \"/users\"\n\nexport const MATCH = \"/match\"\nexport const LOGIN = \"/login\"\nexport const TOURNAMENTS = \"/tournaments\"\nexport const CREATEUSER = \"/register\"\n\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nimport * as routes from \"../../constants/routes\"\nimport \"./NavBar.css\"\nimport styled from \"styled-components\";\n\nconst Nav = styled(NavLink)`\n    margin: 1rem;\n    font-size: 3rem;    \n\n    :hover {\n        color: #F5F5F5\n    }\n\n`\nconst Title = styled.h1`\n    font-size: 4rem;\n    margin: 1.5rem;\n`\n\nconst NavBar = ({currentUser, doLogout}) =>\n    \n    <div className=\"nav\">\n        <Title className=\"title\">League of eSports Legends</Title>\n            <Nav exact to={routes.ROOT} activeClassName=\"active\">HOME</Nav>\n            <Nav to={routes.TEAMS} activeClassName=\"active\">TEAMS</Nav> \n            <Nav to={routes.SCHEDULE} activeClassName=\"active\">SCHEDULE</Nav> \n            {\n                currentUser\n                ? <span className=\"message\"> <Nav to={`${routes.USERS}/${currentUser._id}`}> ACCOUNT </Nav> Hello {currentUser.username} <button onClick={doLogout} className=\"navButton\" >LOGOUT</button></span>\n                : [<Nav key={1} to={'/login'} activeClassName=\"active\">LOGIN </Nav>,\n                <Nav key={2} to={routes.CREATEUSER} activeClassName=\"active\">REGISTER </Nav> ]   \n            }\n    </div>\nexport default NavBar;","import React, { Component } from 'react';\nimport {Redirect} from \"react-router-dom\";\n\n\nclass Login extends Component {\n    state = { \n        username: \"\",\n        password: \"\",\n        logged: false,\n        message: \"\"\n\n    }\n    handleChange = (e) =>\n        this.setState({\n            [e.target.name]: e.target.value\n    })\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const login = await fetch(\"/login\", {\n                method: \"POST\",\n                credentials: \"include\",\n                body: JSON.stringify(this.state),\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            })\n            \n            const parsedResponse = await login.json();\n         \n            if (parsedResponse.success) {\n                \n                this.props.setCurrentUser(parsedResponse.user)\n                this.setState({\n                    logged: true,\n                })\n            } else {\n                this.setState({\n                    message: parsedResponse.message\n                })\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    render() { \n        const { username, password, logged, message } = this.state\n        return ( \n            <div>\n                <div>\n                    <h1>\n                        Sign in\n                    </h1>\n                </div>\n                {     \n                    logged \n                    ? <Redirect to={`/users/${this.props.currentUser._id}`}/>\n                    : <form onSubmit={e => this.handleSubmit(e)}>\n                        <label htmlFor=\"username\">Username</label>\n                        <input text=\"text\" name=\"username\" onChange={this.handleChange} value={username}/>\n                        <label htmlFor=\"password\">Password</label>\n                        <input text=\"password\" name=\"password\" onChange={this.handleChange} value={password}/>\n                        <button type=\"submit\"> Submit</button>\n                        {message}\n                    </form>\n                }\n            </div>\n         );\n    }\n}\n \nexport default Login;\n\n","import React from 'react';\nimport { Link }from \"react-router-dom\"\n\nconst WatchList = (props)=> {\n   \n    const watchList = props.watchList.map((team,i)=>{\n        return (\n            <li key={i}>\n            <Link to={`/teams/${team.id}`} className=\"links\">\n                <span>{team.title}</span><br/>\n                <img src={team.image} width=\"150\" height=\"150\" alt=\"\"/><br/>\n            </Link>\n            <button onClick={()=>props.deleteToWatchList(i)}>Delete</button>\n            </li>\n        )\n    })\n    return (\n        <div>\n            <h3>Favorite Teams</h3>\n            <ul>\n                {watchList}\n            </ul>\n        </div>\n    )\n}\n\n\nexport default WatchList","import React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\"\nimport WatchList from \"../WatchList/WatchList\"\n\nclass ShowUser extends Component {\n\n    state = { \n        user: {\n            username: \"\",\n            watchList: \"\"\n        }\n    }\n    componentDidMount() {\n        this.doGetUser()\n            .then(({user}) => this.setState({user}))\n        }\n\n    doGetUser = async () =>{\n        try {\n            const user = await fetch(`/users/${this.props.match.params.id}`)\n            \n            const parsedUser = await user.json();\n           \n            return parsedUser\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    deleteToWatchList = async (id,) => {\n       \n        try {\n            const deleteWatchList = await fetch(`/users/watchlist/${id}`, {\n                credentials: \"include\",\n                method: 'DELETE'\n              \n            });\n            const deletedWatchList = await deleteWatchList.json();\n            this.setState({\n                user: {\n                    username: deletedWatchList.foundUser.username,\n                    watchList: deletedWatchList.foundUser.watchList\n                }\n            });\n    \n        } catch(err) {\n          console.log(err, ' error')\n        }\n    }\n    render() { \n        const { username, watchList} = this.state.user\n        return ( \n             <div>\n                <h1>{username}</h1>\n\n                {\n                    watchList\n                        ? watchList.length === 0 \n                            ? <h3>Add to your Watch List!</h3>\n                            : <WatchList deleteToWatchList={this.deleteToWatchList} watchList={watchList}/>\n                    : <h2>Loading...</h2> \n                }\n            </div>\n         );\n    }\n}\n \nexport default withRouter(ShowUser)","import React from 'react';\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\"\nimport styled from \"styled-components\";\n\nconst Linked = styled(Link)`    \n    color: red;\n\n    :hover {\n        color: #F5F5F5\n    }\n`\n\nconst ListTournaments = (props) => \n        <li>\n            <Linked to={`/tournaments/${props.tourney.id}`}>\n                <span className=\"team-titles\"> {props.tourney.league.name} - {props.tourney.name.toUpperCase()}  <br/> </span>\n                <img src={props.tourney.league.image_url} width=\"150\" height=\"150\"alt=\"\"/>\n            </Linked>\n        </li>\n\nconst ListTeams = (props) =>\n        props.tourney.teams.map((team,i)=>\n            <li key={i}>\n                <Linked to={`/teams/${team.id}`}>\n                    <span className=\"team-titles\"> {team.name} <br/> </span>\n                    <img src={team.image_url} width=\"150\" height=\"150\"alt=\"\"/>\n                </Linked>\n            </li>\n        )\n\nconst ListOpponents = (props) => \n    <div >\n        <div>\n            <Linked to={`/match/${props.match.id}`}>\n                <h4>{props.match.name}</h4>\n            </Linked>\n            <h6>{dateBegin(props.match.begin_at)}</h6>\n            <h6>{timeBegin(props.match.begin_at)}</h6>\n        </div>\n        {\n            props.match.opponents.map((opponent, i)=>\n                <li key={i}>\n                    <Linked  to={`/teams/${opponent.opponent.id}`}>\n                        <span className=\"team-titles\"> {opponent.opponent.name} <br/> </span>\n                        <img src={opponent.opponent.image_url} width=\"50\" height=\"50\"alt=\"\"/>\n                    </Linked>\n                    <h6>WINS:{props.match.results[i].score}</h6>\n                </li>\n            )\n        }\n    </div>\n\nconst dateBegin = str =>\n    new Date(str).toDateString();\n\nconst timeBegin = str => \n    moment(new Date(str).toTimeString().split(\"G\")[0],\"hh,mm,ss\").format(\"h:mm A\");\n    \n\nconst Tournaments = (props) => {\n    const {dataRunning, dataPast, dataUpcoming, dataPastMatches} = props.data\n    let runningList;\n    let upcomingTeamsList;\n    let pastList;\n    let teamsList;\n    let pastMatchesList;\n    if(props.data.dataRunning){\n    \n        runningList = dataRunning.map((tourney, i) => \n            <ListTournaments tourney={tourney} key={i} />\n        )\n\n        upcomingTeamsList = dataUpcoming.map((match, i) => \n            <ListOpponents match={match} key={i}/>\n        )\n\n        pastList = dataPast.map((tourney, i) => \n            <ListTournaments tourney={tourney} key={i} />\n        )\n\n        teamsList = dataRunning.map((tourney, i)=>\n            <ListTeams tourney={tourney} key={i} />\n        )\n\n        pastMatchesList = dataPastMatches.map((match,i)=>\n                <ListOpponents match={match} key={i}/>  \n        )\n    }\n    return (\n        <div>\n            {\n            runningList \n            ? \n            (\n                <div>\n                    <div>\n                        <div className=\"home-box-1\">\n                            <h3>Current tournaments</h3>\n                            <ul>\n                                {runningList}\n                            </ul>\n                        </div>\n\n                        <div className=\"home-box-2\">\n                            <h3>Upcoming Matches</h3>\n                            \n                            <div className=\"list-container-1\">\n                                {upcomingTeamsList}\n                            </div>\n                        </div>\n                        <div className=\"home-box-3\">       \n                            <h3>Past tournaments</h3>\n                            <div className=\"list-container-2\">\n                                <ul>\n                                    {pastList}\n                                </ul>\n\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"home-box-4\">\n                        <h3>Team in current tournament</h3>\n                        <div className=\"list-container-3\">\n\n                            <ul>\n                                {teamsList}\n                            </ul>\n                        </div>\n                    </div>\n                    <div className=\"home-box-5\">\n                        <h3>Past Matches</h3>\n                        <div className=\"list-container-4\">\n                            <ul>\n                                {pastMatchesList}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            )\n            : <h1>Loading...</h1>\n            }\n        </div>\n    )\n   \n}\n\n\n\nexport default Tournaments","import React from 'react';\nimport { Link }from \"react-router-dom\"\nconst AllTeam = (props) => { \n    \n    let teamList;\n    if (props.data.dataUpcomingTourney) {  \n        teamList = props.data.dataUpcomingTourney.map((tourney, i)=>\n        tourney.teams.map((team,i)=>\n            <li key={i} className=\"team-list-li\">\n                <Link to={`/teams/${team.id}`} className=\"links\">\n                    <span className=\"team-titles\">{team.name} </span> <br/>\n                    <img src={team.image_url} width=\"150\" height=\"150\"alt=\"\"/>\n                </Link>\n            </li>\n        )\n    )\n}\n    return (\n        <div className=\"team-list-1\">\n            {\n                props.data.dataUpcomingTourney\n                ? teamList\n                : <h2> Loading... </h2>\n            }\n            \n        </div>\n    )\n\n}\nexport default AllTeam;","import React, { Component } from 'react';\n\nimport { Redirect } from \"react-router-dom\"\n\nclass CreateUser extends Component {\n    state = { \n        username: \"\",\n        password: \"\",\n        logged: false\n    }  \n    handleChange = (e) =>\n        this.setState({\n            [e.target.name]: e.target.value\n    })\n   \n    handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const createUser = await fetch(\"/login/new\", {\n                method: \"POST\",\n                credentials: \"include\",\n                body: JSON.stringify(this.state),\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            })\n            const parsedResponse = await createUser.json();\n                if (parsedResponse.success) {\n                    this.props.setCurrentUser(parsedResponse.newUser)\n            \n                    this.setState({\n                        logged: true\n                    })\n                }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    \n    render() { \n        \n        const { username, password, logged } = this.state\n        return ( \n            <div>\n                <div>\n                    <h1>\n                        Register!\n                    </h1>\n                </div>\n                {\n                    logged\n                    ? <Redirect to={`/users/${this.props.currentUser._id}`}/>\n                    : <RegisterForm\n                        handleChange = {this.handleChange}\n                        handleSubmit = {this.handleSubmit}\n                        username = {username}\n                        password = {password}\n                    />\n                }\n            </div>\n         );\n    }\n}\n const RegisterForm = ({handleChange, handleSubmit, username, password}) =>\n    <form onSubmit={e => handleSubmit(e)}>\n        <label htmlFor=\"username\">Username</label>\n        <input type=\"text\" name=\"username\" onChange={handleChange} value={username}/>\n        <label htmlFor=\"password\">Password</label>\n        <input type=\"password\" name=\"password\" onChange={handleChange}value={password}/>\n        <button type=\"submit\">SUBMIT </button>\n    </form>\n\nexport default CreateUser;","import React from 'react';\n\nconst TeamList = (props) =>{\n    \n    const {name,players,image_url} = props.data.fullTeam\n    \n    const teamList = players.map((player,i)=>\n        <li key={i} className=\"team-list-li\">\n            <span className=\"team-titles\">\n            {player.name}\n            </span>\n            {\n                player.image_url \n                ? <img src={player.image_url} height=\"150\" alt=\"\"/>\n                : <h3>No image available</h3>\n            } \n            <span className=\"team-titles\">\n            ROLE: {player.role ? player.role.toUpperCase(): \"Not specified\"}\n            </span>\n        </li>\n    )\n\n    return (\n        <div>\n            <span className=\"team-titles\">\n            {name}\n            </span>\n            <img src={image_url} width=\"300\" height=\"300\" alt=\"\"/>\n            \n            <ul>\n                {teamList}\n            </ul>\n        </div>\n        )\n}\nexport default TeamList","import React, { Component } from 'react';\nimport TeamList from \"../TeamList/TeamList\"\n\nclass TeamShow extends Component {\n    state = { \n        data: [],\n        teamId: window.location.pathname.split(\"/\")[2],\n        message: \"\",\n        addMessage: null,\n\n\n    }\n    componentDidMount() {\n        this.getTeam(this.state.teamId).then(allData => {\n            \n            this.setState({\n                data: allData,\n            })\n        })\n    }\n\n    getTeam = async (ids) =>{\n        try {\n            const teamShow = await fetch(`/api/teams/${ids}`, {\n\n                credentials: \"include\"\n            })\n            const teamShowJson = await teamShow.json()\n            if(teamShowJson.success){\n                return teamShowJson\n              }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    addTeamToWatch = async (team) => {\n       \n        try {\n           \n                const addTeam = await fetch(\"/users/add\", {\n                    method: \"POST\",\n                    body: JSON.stringify(team),\n                    credentials: \"include\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                });\n                const parsedResponse = await addTeam.json();\n              \n                if (parsedResponse.success) {\n                    \n                    this.props.setCurrentUser(parsedResponse.updatedUser)\n                    this.setState({\n                        addMessage: \"Added to watch list!\"\n                    })\n\n                }\n            \n            } catch(err) {\n            console.log(err)\n        }\n\n    }\n    render() { \n       const {data, message, addMessage} = this.state\n      \n        return ( \n            <div>\n                <div className=\"team-show-1\">\n                    <h1>{data.name}</h1>\n                    {\n                        this.props.currentUser\n                        && [<button key={1}type=\"submit\" onClick={()=> this.addTeamToWatch(data.fullTeam)}>Add to WatchList</button>,\n                        <span key={2}>{addMessage} </span>]\n                    }\n                </div>\n                {\n                    data.length === 0\n                    ? <h1>Loading...</h1>\n                    : [<h3 key={1}>{message}</h3>, <TeamList key={2} addTeamToWatch={this.addTeamToWatch} data={data}/>]\n                }\n                \n            </div>\n         );\n    }\n}\n \nexport default TeamShow;","import React, { Component } from 'react';\nimport { Link }from \"react-router-dom\";\nimport moment from \"moment\";\n\nclass Match extends Component {\n    state = { \n        data: [],\n        matchId: window.location.pathname.split(\"/\")[2],\n    }\n\n    componentDidMount() {\n        this.getMatch(this.state.matchId).then(allData => {\n            this.setState({\n                data: allData,\n            })\n        })\n    }\n\n    getMatch = async (id) =>{\n        try {\n            const teamShow = await fetch(`/api/match/${id}`, {\n                // body: JSON.stringify(this.state.data[0].id),\n                credentials: \"include\"\n            })\n            const teamShowJson = await teamShow.json()\n            if(teamShowJson.success){\n                return teamShowJson\n              }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    dateBegin = str =>\n    new Date(str).toDateString();\n\n    timeBegin = str => \n    moment(new Date(str).toTimeString().split(\"G\")[0],\"hh,mm,ss\").format(\"h:mm A\");\n\n    render() { \n\n        const {data} = this.state\n        return ( \n            <div>\n\n                \n                {\n                    data.match\n                    ? <div>\n                        <h3>{data.match.league.name}</h3>\n                        <img width=\"250\" height=\"250\"src={data.match.league.image_url } alt=\"\"/>\n\n                        <div>\n                            \n                                <h4>{data.match.name}</h4>\n                           \n                            <h6>{this.dateBegin(data.match.begin_at)}</h6>\n                            <h6>{this.timeBegin(data.match.begin_at)}</h6>\n                        </div>\n                        {\n                            data.match.opponents.map((opponent, i)=>\n                                <li key={i}>\n                                    <Link to={`/teams/${opponent.opponent.id}`} className=\"links\">\n                                        {opponent.opponent.name} <br/>\n                                        <img src={opponent.opponent.image_url} width=\"150\" height=\"150\"alt=\"\"/>\n                                    </Link>\n                                    <h6>WINS:{data.match.results[i].score}</h6>\n                                </li>\n                            )\n                        }\n                        </div>\n                    : <h2>Loading...</h2>\n                }\n            </div>\n         );\n    }\n}\nexport default Match;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nclass Schedule extends Component {\n    state = { \n        data: []\n    }\n\n    componentDidMount() {\n        this.getUpcoming(this.state.matchId).then(allData => {\n            this.setState({\n                data: allData,\n            })\n        })\n    }\n    getUpcoming = async () =>{\n        try {\n            const upcomingMatch = await fetch(`/api/schedule`, {\n                credentials: \"include\"\n            })\n            const upcomingMatchJson = await upcomingMatch.json()\n            if(upcomingMatchJson.success){\n                return upcomingMatchJson\n              }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    dateBegin = str =>\n        new Date(str).toDateString();\n\n    timeBegin = str => \n        moment(new Date(str).toTimeString().split(\"G\")[0],\"hh,mm,ss\").format(\"h:mm A\");\n\n    render() { \n        const { data } = this.state\n        return ( \n            <div className=\"list-container-1\">\n                {\n                    data.schedules\n                    ? data.schedules.map((match,i)=>\n                        <div key={i}>\n                            <div>\n                                <Link to={`/match/${match.id}`} className=\"links\">\n                                    <h4>{match.name}</h4>\n                                </Link>\n                                <h6>{this.dateBegin(match.begin_at)}</h6>\n                                <h6>{this.timeBegin(match.begin_at)}</h6>\n                            </div>\n                            {\n                                match.opponents.map((opponent, i)=>\n                                    <div key={i}>\n                                        <li>\n                                            <Link to={`/teams/${opponent.opponent.id}`} className=\"links\">\n                                                {opponent.opponent.name} <br/>\n                                                <img src={opponent.opponent.image_url} width=\"100\" height=\"100\"alt=\"\"/>\n                                            </Link>\n                                            <h6>WINS:{match.results[i].score}</h6>\n                                        </li>\n                                    </div>\n                                )\n                            }\n                        </div>\n                    )\n                    : <h2>Loading...</h2>\n                }\n            </div>\n         );\n    }\n}\n \nexport default Schedule;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\"\nimport styled from \"styled-components\";\n\nconst Linked = styled(Link)`    \n    :hover {\n        color: #F5F5F5\n    }\n`\n\nclass TourneyShow extends Component {\n    state = { \n        stats: [],\n        tournamentData: [],\n        tourneyId: window.location.pathname.split(\"/\")[2]\n    }\n\n    componentDidMount() {\n        this.getTournament(this.state.tourneyId).then(allData => {\n            this.setState({\n                stats: allData.tournamentStats,\n                tournamentData: allData.tournament\n            })\n        })\n    }\n\n    getTournament = async (id) => {\n        try {\n            const schedule = await fetch(`/api/tournament/${id}`)\n          \n            const scheduleJson = await schedule.json()\n            \n            if(scheduleJson.success){\n              return scheduleJson\n            }\n          \n        } catch (error) {\n          console.log(error)\n        }\n      }\n    render() {\n        const { stats, tournamentData } = this.state\n       \n        return ( \n            <div>\n                {\n                    tournamentData.name\n                    ?  <div>\n                            <h3>{tournamentData.league.name}</h3>\n                            <h4>{tournamentData.name}</h4>\n                            <img src={tournamentData.league.image_url} height=\"200\" alt=\"\"/>\n                            <div className=\"list-container-1\">\n                                {\n                                    stats.map((team,i)=>\n                                        <li key={i} className=\"links\">\n                                            <h6>RANK: {team.rank}</h6>\n                                            <Linked to={`/teams/${team.team.id}`}>\n                                                <span className=\"team titles\" > {team.team.name} <br/> </span>\n                                                <img src={team.team.image_url} height=\"100\"alt=\"\"/>\n                                            </Linked>\n                                            {\n                                                team.wins\n                                                && <span className=\"win-class team-titles\">Wins: {team.wins} Losses: {team.losses}</span>\n                                            }\n                                        </li>\n                                    \n                                    )\n                                }\n                            </div>\n                        </div>\n                    : <h2>Loading...</h2>\n                }\n\n            </div>\n           \n         );\n    }\n}\n \nexport default TourneyShow;","import React, { Component } from 'react';\nimport { Switch, Route, withRouter } from \"react-router-dom\"\nimport NavBar from \"./component/NavBar/NavBar\"\nimport Login from \"./component/Login/Login\"\nimport ShowUser from \"./component/ShowUser/ShowUser\"\nimport Tournaments from \"./component/TourneyContainer/Tournaments\"\nimport AllTeam from \"./component/AllTeams/AllTeam\"\nimport CreateUser from \"./component/CreateUser/CreateUser\"\nimport TeamShow from \"./component/TeamShow/TeamShow\"\nimport Match from \"./component/MatchShow/MatchShow\"\nimport Schedule from \"./component/Schedule/Schedule\"\nimport TourneyShow from \"./component/TournamentsShow/TournamentsShow\"\n\nimport * as routes from \"./constants/routes\"\n\nimport './App.css';\n\nrequire(\"dotenv\").config();\n\nclass App extends Component {\n  state = { \n    currentUser: null,\n    data: [],\n    upcoming:[]\n    \n   }\n\n  setCurrentUser = (user) => {\n    this.setState({\n      currentUser: user\n      \n    })\n  }\n  \n  doLogout= async () => {\n    await fetch(\"/login/logout\", {\n    credentials: \"include\",\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n      }\n    })\n    this.setState({\n      currentUser: null\n    })\n    this.props.history.push(routes.LOGIN)\n  }\n\n  \n  componentDidMount() {\n    this.getTournaments().then(allData =>\n      {\n        \n        this.setState({\n          data: allData.data,\n          upcoming: allData.data.dataUpcoming\n        })\n      }\n    )  \n  }\n  \n  getTournaments = async () => {\n    try {\n      const tournaments = await fetch(`/api/tournaments`)\n      \n        const tournamentsJson = await tournaments.json()\n        \n        if(tournamentsJson.success){\n          return tournamentsJson\n        }\n      \n    } catch (error) {\n      console.log(error)\n    }\n  }\n \n  \n  \n  render() { \n    const { currentUser, data, upcoming } = this.state\n    return ( \n      <div >\n      <NavBar doLogout={this.doLogout} currentUser={currentUser}/> \n      \n      <Switch>\n        <Route exact path={routes.ROOT} render={()=><Tournaments data={data}/>}/>\n        <Route exact path={routes.TEAMS} render={()=> <AllTeam data={data}/> }/>\n        <Route exact path={`${routes.TEAMS}/:id`} render={()=> <TeamShow data={data} currentUser={currentUser} setCurrentUser={this.setCurrentUser} />}/> \n        <Route exact path={`${routes.TOURNAMENTS}/:id`} render={() => <TourneyShow dataTourney={data} />} />\n        <Route exact path={`${routes.MATCH}/:id`} render={()=><Match data={data}/>}/>\n        <Route exact path={routes.CREATEUSER} render={() => <CreateUser currentUser={currentUser} setCurrentUser={this.setCurrentUser}/>} />\n        <Route exact path={routes.SCHEDULE} render={() => <Schedule data={upcoming}/>} />\n        <Route exact path={`${routes.USERS}/:id`} render={() => <ShowUser />} />\n        <Route exact path={routes.LOGIN} render={()=> <Login currentUser={currentUser} setCurrentUser={this.setCurrentUser}/>} />\n        <Route render={()=> <div>You're LOST</div>}/>\n      </Switch>\n      \n    </div>\n     );\n  }\n}\n\nexport default withRouter(App) ;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter as Router } from \"react-router-dom\"\n\nReactDOM.render(\n\n\n<Router>\n    <App />\n</Router>, \ndocument.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}